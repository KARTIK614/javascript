//In this lecture we are trying to learn how the javascript is working behind the scenes basically we are discussing about the prototypical model of Javascript. It is used to manage the behaviors of javascript majorly used in inheritance in javascript. In at we are discussing about that prototype which will be founded inside the browser's console if we are trying to declare an error within after it we just see its properties then there is an option named prototype so here we are discussing about that prototype in its properties.

// THE THHEORY IS WRITTEN DOWN AS FOLLOWS:-
/**
 * Javascript has a nature of not giving up as many times as possible if the thing is not founded in the class itself then it will go to its parent class and if it is not found in the parent class itself then it will go its grandparent class the thing continues until or unless it will found a null value or the exact value which the javascript is trying to find.
 * Is the object which it's giving the new and this keyword liability to work on Javascript and one another thing the this keyword is not available in arrow function because of this prototype.
 * IN javascript everything is refers to a object either it's a array or a string at the end of the day the string and the array goes in object which is a children of null or if you are looking on them reversely and the parent order the parent class of object is directed to null which is used as a grandparent class if the prototype couldn't find anything in reach null it stops.
 * If you consider a function in javascript then the function is working as a function handling its prototypes its past arguments but as well as the function is working as a object using the dot operator and the prototypes assigned to it you can use dot power functions like with that object or function whatever you want to call it the thing is in js the function is working as an object so you can imply a property to object on that function as well, The reason behind that is prototypical inheritance which refers if the function does not have the defined properties like you are creating a function named as multiplyBy5 Which is working as its name will take an argument from the user and multiply it by 5 and then return it as simple as that and if you add the power to this function with a lower operator means you are writing down multiply by 5 dot power to 2 and assigning it a value name is 2 then you can call the function it's a very obvious number so if you want to call the multiply by M dot power with it you can call it and then it will return to V the beauty of javascript is it will run with prototypical mobile phones it will be used considerate the various execution to go to vote say my execution of the Jays first find the properties of function if it will not count that of the function there it will go to the properties of object as the function is a subpar for the children of objects it goes to the parent classes until it founds the NULL.
 * 
 * Let's understand that this is not when you call this function two times through prototype definition and here it's just saying You are going to tell the time to implement the creator which is a name of the function then to use the this keyword is specific link for both functions let us say the page is defined two times in this syntax so you are using this keyword with the function who operates on those two functions create users while it you are able to use the wrist functions for this keyword functionality on both the functions defined by that.
 */